CREATE TABLE App (
	id TEXT NOT NULL PRIMARY KEY,
	displayName TEXT NOT NULL,
	packageName TEXT NOT NULL,

	launchIntentUriDefault TEXT,
	launchIntentUriLeanback TEXT,

	favoriteOrder INTEGER
);

CREATE INDEX appPackageName ON App(packageName);
CREATE INDEX appFavoriteOrder ON App(favoriteOrder);

getAll:
SELECT * FROM App ORDER BY displayName ASC;

getAllFavorites:
SELECT * FROM App WHERE favoriteOrder IS NOT NULL ORDER BY favoriteOrder ASC;

getById:
SELECT * FROM App WHERE id = :id LIMIT 1;

getByPackageName:
SELECT * FROM App WHERE packageName = :packageName;

upsert {
	UPDATE App SET
		displayName = :displayName,
		packageName = :packageName,
		launchIntentUriDefault = :launchIntentUriDefault,
		launchIntentUriLeanback = :launchIntentUriLeanback
	WHERE id = :id;

	INSERT OR IGNORE INTO App (
		id,
		displayName,
		packageName,
		launchIntentUriDefault,
		launchIntentUriLeanback
	) VALUES (
		:id,
		:displayName,
		:packageName,
		:launchIntentUriDefault,
		:launchIntentUriLeanback
	);
}

updateFavoriteAdd:
UPDATE App SET favoriteOrder = COALESCE((SELECT MAX(favoriteOrder) FROM App), -1) + 1 WHERE id = :id;

updateFavoriteRemove {
	-- Decrease the order for all items after this item
	UPDATE App SET favoriteOrder = favoriteOrder - 1 WHERE favoriteOrder > (SELECT favoriteOrder FROM App WHERE id = :id) AND id != :id;
	-- Update requested item
	UPDATE App SET favoriteOrder = NULL WHERE id = :id;
}

updateFavoriteOrder {
	-- Decrease the order for all items after the old order
	UPDATE App SET favoriteOrder = favoriteOrder - 1 WHERE favoriteOrder > (SELECT favoriteOrder FROM App WHERE id = :id) AND id != :id;
	-- Increase the order for all items after the new order
	UPDATE App SET favoriteOrder = favoriteOrder + 1 WHERE favoriteOrder >= :order AND id != :id;
	-- Update requested item
	UPDATE App SET favoriteOrder = :order WHERE id = :id;
}

removeById:
DELETE FROM App WHERE id = :id;

removeByPackageName:
DELETE FROM App WHERE packageName = :packageName;
